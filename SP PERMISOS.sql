--PROCEDIMIENTOS SEG_PERMISOS
CREATE OR REPLACE FUNCTION SP_PERMISOS(
    TIPO_OPERACION VARCHAR(2),
	PI_COD_PERMISOS integer,
    PV_PER_INSERCION varchar,
	PV_PER_ELIMINAR varchar,
    PV_PER_ACTUALIZAR varchar,
	PV_PER_CONSULTAR varchar,
	PI_COD_ROL integer
	
) RETURNS table( COD_PERMISOS integer,
    PER_INSERCION VARCHAR,
	PER_ELIMINAR VARCHAR,
	PER_ACTUALIZAR VARCHAR,
	PER_CONSULTAR VARCHAR,
	FEC_MODIFICACION TIMESTAMP,
	COD_ROL INTEGER
)
AS $$
  BEGIN
  --Convertimos a mayuscula el tipo de operacion que realizara el SP;
  TIPO_OPERACION = UPPER(TIPO_OPERACION);
	CASE TIPO_OPERACION
    WHEN 'ST' THEN --SELECCIONAR TODOS LOS REGISTROS
			 RETURN QUERY select * from SEG_PERMISOS;
           
    WHEN 'S' THEN --SELECCIONAR UN REGISTRO ESPECIFICO
			 RETURN QUERY select * from SEG_PERMISOS where SEG_PERMISOS.COD_PERMISOS=PI_COD_PERMISOS;
       
       
     WHEN 'I' THEN --INSERT
			INSERT INTO SEG_PERMISOS(
     PER_INSERCION,
     PER_ELIMINAR,
	 PER_ACTUALIZAR,
	 PER_CONSULTAR,
	 FEC_MODIFICACION,
	 COD_ROL
    )values(
    PV_PER_INSERCION,
	PV_PER_ELIMINAR,
	PV_PER_ACTUALIZAR,
    PV_PER_CONSULTAR,
    current_timestamp,
	PI_COD_ROL	
    );	
			
       
     WHEN 'U' THEN --UPDATE
			UPDATE SEG_PERMISOS SET   PER_INSERCION=PV_PER_INSERCION,
			PER_ELIMINAR=PV_PER_ELIMINAR,
			PER_ACTUALIZAR=PV_PER_ACTUALIZAR,
			PER_CONSULTAR=PV_PER_CONSULTAR,
			FEC_MODIFICACION=current_timestamp
            WHERE SEG_PERMISOS.COD_PERMISOS=PI_COD_PERMISOS;
			
        
		
    END CASE;

  END;
$$ LANGUAGE plpgsql;